{
  "title": "Math.clz32",
  "description": "Count the leading zeroes in a 32-bit representation of a number.",
  "code": "// With the addition of binary value handling in\n// ECMAscript, as well as applications such as\n// WebGL, more sophisticated bit operations need\n// to exist in ECMAscript. One of these is the\n// Count Leading Zeros (32-bit representation).\n// It has applications in converting integers to\n// floating-point numbers, fast data compression,\n// and managing overflows due to multiplication.\n\n// For 0, which we would represent as 32 zeroes\n// in a 32-bit representation, will return 32\n// for the CLZ operation.\nconsole.log(Math.clz32(0));\n\n// For 1, which would have the least significant\n// bit set to 1 and all others 0, will return 31.\nconsole.log(Math.clz32(1));\n\n// And so on for powers of 2, with each in the\n// series reducing the number of leading zeroes\n// by one.\nconsole.log(Math.clz32(2));\nconsole.log(Math.clz32(4));\nconsole.log(Math.clz32(8));\nconsole.log(Math.clz32(16));\nconsole.log(Math.clz32(32));\n\n// Negative numbers are converted to unsigned\n// integers, first. So, -1 is the same as the\n// maximum unsigned integer and, therefore, has\n// no leading zeroes.\nconsole.log(Math.clz32(-1));\n\n// The conversion of a floating-point number to\n// an unsigned integer involves truncating its\n// mantissa instead of rounding.\nconsole.log(Math.clz32(1));\nconsole.log(Math.clz32(1.999999));"
}
